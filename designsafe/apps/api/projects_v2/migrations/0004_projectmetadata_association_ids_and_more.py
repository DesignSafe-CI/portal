# Generated by Django 4.2.6 on 2024-01-17 03:55

from django.conf import settings
import django.contrib.postgres.fields
import django.core.serializers.json
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("projects_v2_api", "0003_projectmetadata_unique_id_per_project"),
    ]

    operations = [
        migrations.AddField(
            model_name="projectmetadata",
            name="association_ids",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=256),
                default=list,
                help_text="(DEPRECATE IN V3) Tapis V2 association IDs.",
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="projectmetadata",
            name="base_project",
            field=models.ForeignKey(
                help_text="Base project containing this entity.For top-level project metadata, this is `self`.",
                on_delete=django.db.models.deletion.CASCADE,
                to="projects_v2_api.projectmetadata",
            ),
        ),
        migrations.AlterField(
            model_name="projectmetadata",
            name="name",
            field=models.CharField(
                help_text="Metadata namespace, e.g. 'designsafe.project'",
                max_length=100,
                validators=[django.core.validators.MinLengthValidator(1)],
            ),
        ),
        migrations.AlterField(
            model_name="projectmetadata",
            name="users",
            field=models.ManyToManyField(
                help_text="Users who have access to a project.",
                related_name="projects",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="projectmetadata",
            name="value",
            field=models.JSONField(
                encoder=django.core.serializers.json.DjangoJSONEncoder,
                help_text="JSON document containing file metadata, including title/description",
            ),
        ),
    ]
