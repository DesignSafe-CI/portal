sudo: required
addons:
  chrome: stable
  firefox: latest
dist: trusty
cache:
  pip: true
  directories:
  - node_modules
  - static
python:
- '3.6'
os:
- linux
stages:
- lint
- test
- build
matrix:
  include:
  - name: Flake8
    language: python
    python:
    - '3.6'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i demo > /dev/null"
    script:
    - flake8 designsafe
  - name: pydocstyle
    language: python
    python:
    - '3.6'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i demo > /dev/null"
    script:
    - pydocstyle designsafe
  - name: eslint
    language: node_js
    node_js:
    - node
    stage: lint
    install:
    - npm install sync-exec
    - npm install
    script:
    - npm run-script lint
  - name: npm test
    language: python
    python:
    - '3.6'
    stage: test
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i demo > /dev/null"
    - npm install
    - npm install -g codecov
    script:
    - npm run test
    after_script:
    - npm run report-coverage
  - name: unittests
    language: python
    python:
    - '3.6'
    stage: test
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i demo > /dev/null"
    script:
    - coverage run --branch --source='designsafe' manage.py test --settings=designsafe.settings.test_settings
      --pattern=tests.py -v2
    after_script:
    - coverage xml
    - codecov
  - name: webpack build
    language: python
    python:
    - '3.6'
    stage: build
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i demo > /dev/null"
    - npm install
    script:
    - npm run build
  allow_failures:
  - name: Flake8
    language: python
    python:
    - '3.6'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i demo > /dev/null"
    script:
    - flake8 designsafe
  - name: pydocstyle
    language: python
    python:
    - '3.6'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i demo > /dev/null"
    script:
    - pydocstyle designsafe
  - name: eslint
    language: node_js
    node_js:
    - node
    stage: lint
    install:
    - npm install sync-exec
    - npm install
    script:
    - npm run-script lint
before_script:
- df -h
notifications:
  slack:
    rooms:
      secure: MUgwGuo4y7s8G5nQd58/Mdbaxpmum4aKm7X8wO+5EAaJ62e5a5h6JKdyuVtaIRFV1UFt6D9ijq0uKiGIR2nWUqFlPBe5J81Qd/pYJ3G1bm0YCe4Z9V1UbkKTrWJFyvp9dyjQ6bOEhFn2Vg5N2CmQ1z92+vzR5cV4V83Ty8rd4F+3xZWf/LMdW2wdSpIRs548hbokWvczk1R/B+C+ZpV4uqOLXPYK4MB4QwzafKKnAiPjeF3e60mXdzgfwsx22T5PyIOkE4jfyQuoVcQ8qF0DIjAiUnklQ3cGztF41OUSFxhhMuZkivuf+O5NeNuA7WFEMGLH71SX/qT5GjMZ2CPqHXR1GvXdFihpJMX4k0+q06mSUO2q/zB+BKtazHFZGfzs011UE+03KuZBjqkO+vmZETfm1DEajlm52676a5CsTEw421FfPIJpTdLxwOHIjVDfqQpwkjey8yPG/7iSSiSZUqFMVf0XkccIJmZWySEtpnJ1dSN6x7C+cBuq+B0zrNgZngVFn8nJT1k7kZ42AZS7DYv6W6BMuLXrj4vr+NaklBRegDAzMT49C/8PjfH2/lcVWDQze/LMni5p5i9xU3rhsewDYNHqe03wtTDm3jKfgkgOZrv1Og5WBsw1xJdNIOrLr8meqYK0tBPaqGFTL+e29e0y/EfbIoFsvo8tE6fMVOo=
    on_success: always
    on_failure: always
