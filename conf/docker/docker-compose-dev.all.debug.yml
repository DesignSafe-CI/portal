services:
  redis:
    image: redis:7
    volumes:
      - des_redis_data:/data
    ports:
      - 127.0.0.1:6379:6379
    container_name: des_redis
    hostname: des_redis

  rabbitmq:
    image: rabbitmq:3.6.10-management
    volumes:
      - des_rabbitmq_data:/var/lib/rabbitmq/mnesia/rabbit@des_rabbitmq
    env_file: ../env_files/rabbitmq.env
    ports:
      - 127.0.0.1:5672:5672
    container_name: des_rabbitmq
    hostname: des_rabbitmq

  memcached:
    image: memcached:latest
    command: ["memcached", "-I", "5m"]
    container_name: des_memcached
    hostname: des_memcached

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    ulimits:
      memlock: -1
    environment:
      - ES_HEAP_SIZE:2g
    volumes:
      - ../elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ../elasticsearch/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      - des_es_data:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:9200:9200
    container_name: des_elasticsearch
    hostname: des_elasticsearch

  postgres:
    image: postgres:14.9
    environment:
      - POSTGRES_PASSWORD=taccforever
      - POSTGRES_USER=ds_user
      - POSTGRES_DB=ds_database
      - PGDATA=/var/lib/postgresql/data/ds_database
    volumes:
      - des_postgres_data:/var/lib/postgresql/data
    hostname: des_postgres
    ports:
      -   127.0.0.1:5432:5432
    container_name: des_postgres

  nginx:
    image: nginx:stable
    volumes:
      - ../nginx/nginx.debug.conf:/etc/nginx/nginx.conf
      - ../nginx/gzip.conf:/etc/nginx/gzip.conf
      - ../nginx/certificates/designsafe.dev.crt:/etc/ssl/designsafe.dev.crt
      - ../nginx/certificates/designsafe.dev.key:/etc/ssl/designsafe.dev.key
      - ../nginx/dhparam.pem:/etc/ssl/dhparam.pem
      - ~/corral-repl/tacc/NHERI:/corral-repl/tacc/NHERI
      - ../../.:/srv/www/designsafe
      - ../../data/media:/srv/www/designsafe/media
    links:
      - django:django
    ports:
      - 127.0.0.1:80:80
      - 127.0.0.1:443:443
    container_name: des_nginx
    hostname: des_nginx

  django:
    image: designsafeci/portal:latest
    env_file:
      - path: ../env_files/designsafe.env
      - path: ../env_files/ngrok.env
        required: false
    links:
      - memcached:memcached
      - rabbitmq:rabbitmq
      - redis:redis
      - elasticsearch:elasticsearch
    volumes:
      - ../../.:/srv/www/designsafe
      -  ../../client/react-assets.html:/srv/www/designsafe/designsafe/templates/react-assets.html
      - ../../data/media:/srv/www/designsafe/media
      - ~/corral-repl/tacc/NHERI:/corral-repl/tacc/NHERI
      - des_chroma_data:/srv/www/designsafe/chroma_db
    ports:
      - 127.0.0.1:5678:5678
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: python manage.py runserver --noasgi 0.0.0.0:8000
    container_name: des_django
    hostname: des_django

  websockets:
    image: designsafeci/portal:latest
    env_file:
      - path: ../env_files/designsafe.env
      - path: ../env_files/ngrok.env
        required: false
    volumes:
      - ../../.:/srv/www/designsafe
      - ../../data/media:/srv/www/designsafe/media
      - ~/corral-repl/tacc/NHERI:/corral-repl/tacc/NHERI
      - des_chroma_data:/srv/www/designsafe/chroma_db
    container_name: des_websockets
    command: python manage.py runserver 0.0.0.0:9000

  workers:
    image: designsafeci/portal:latest
    env_file:
      - path: ../env_files/designsafe.env
      - path: ../env_files/ngrok.env
        required: false
    links:
      - memcached:memcached
      - rabbitmq:rabbitmq
      - redis:redis
      - elasticsearch:elasticsearch
    volumes:
      - ../../.:/srv/www/designsafe
      - ../../data/media:/srv/www/designsafe/media
      - ~/corral-repl/tacc/NHERI:/corral-repl/tacc/NHERI
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: /srv/www/designsafe/bin/run-celery-debug.sh
    container_name: des_workers
    hostname: des_workers

  ngrok:
    image: ngrok/ngrok:latest
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    command:
      - "http"
      - --url=${NGROK_DOMAIN}
      - "https://host.docker.internal:443"
    ports:
      - 4040:4040
    container_name: des_ngrok
    hostname: des_ngrok

volumes:
  des_redis_data:
  des_postgres_data:
  des_es_data:
  des_rabbitmq_data:
  des_chroma_data:
